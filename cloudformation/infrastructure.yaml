AWSTemplateFormatVersion: '2010-09-09'
Description: ECS Fargate cluster with Zabbix, PostgreSQL, and Nginx on AWS

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: The VPC ID to deploy resources into
  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: A list of subnet IDs for the ECS tasks
  ProjectName:
    Type: String
    Default: zabbix
  Environment:
    Type: String
    Default: dev
  ZabbixServerImage:
    Type: String
    Default: zabbix/zabbix-server-pgsql:latest
  ZabbixWebImage:
    Type: String
    Default: zabbix/zabbix-web-nginx-pgsql:latest
  PostgresImage:
    Type: String
    Default: postgres:13
  ECSTaskCpu:
    Type: String
    Default: 512
  ECSTaskMemory:
    Type: String
    Default: 1024
  DatabaseName:
    Type: String
    Default: zabbix

Resources:
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub '${ProjectName}-${Environment}-cluster'

  ECSServiceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for ECS services
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 10051
          ToPort: 10051
          CidrIp: 0.0.0.0/0

  DBSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub '${ProjectName}/${Environment}/db'
      Description: Database credentials
      GenerateSecretString:
        SecretStringTemplate: '{"username": "zabbix"}'
        GenerateStringKey: password
        ExcludeCharacters: '"@/\'

  ZabbixDatabase:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: !Sub '${ProjectName}-${Environment}-db'
      AllocatedStorage: 20
      DBInstanceClass: db.t3.micro
      Engine: postgres
      MasterUsername: !Join ['', ['{{resolve:secretsmanager:', !Ref DBSecret, ':SecretString:username}}' ]]
      MasterUserPassword: !Join ['', ['{{resolve:secretsmanager:', !Ref DBSecret, ':SecretString:password}}' ]]
      DBName: !Ref DatabaseName
      VPCSecurityGroups:
        - !Ref ECSServiceSecurityGroup
      DBSubnetGroupName: !Ref DBSubnetGroup

  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for Zabbix DB
      SubnetIds: !Ref Subnets

  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
        - arn:aws:iam::aws:policy/AmazonRDSFullAccess
        - arn:aws:iam::aws:policy/SecretsManagerReadWrite

  ZabbixServerLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/ecs/${ProjectName}-${Environment}-server'
      RetentionInDays: 7

  ZabbixWebLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/ecs/${ProjectName}-${Environment}-web'
      RetentionInDays: 7

  ZabbixServerTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub '${ProjectName}-${Environment}-server'
      NetworkMode: awsvpc
      RequiresCompatibilities: [FARGATE]
      Cpu: !Ref ECSTaskCpu
      Memory: !Ref ECSTaskMemory
      ExecutionRoleArn: !Ref ECSTaskExecutionRole
      ContainerDefinitions:
        - Name: zabbix-server
          Image: !Ref ZabbixServerImage
          Essential: true
          PortMappings:
            - { ContainerPort: 10051, Protocol: tcp }
          Environment:
            - { Name: DB_SERVER_HOST, Value: !GetAtt ZabbixDatabase.Endpoint.Address }
            - { Name: POSTGRES_DB, Value: zabbix }
            - { Name: ZBX_HISTORYSTORAGETYPES, Value: "log,text" }
            - { Name: ZBX_DEBUGLEVEL, Value: '3' }
            - { Name: ZBX_TIMEOUT, Value: '4' }
          Secrets:
            - Name: POSTGRES_USER
              ValueFrom: !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${DBSecret}:username::'
            - Name: POSTGRES_PASSWORD
              ValueFrom: !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${DBSecret}:password::'
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref ZabbixServerLogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs
          HealthCheck:
            Command: [ "CMD-SHELL", "nc -z localhost 10051 || exit 1" ]
            Interval: 30
            Timeout: 5
            Retries: 3
            StartPeriod: 60

  ZabbixWebTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub '${ProjectName}-${Environment}-web'
      NetworkMode: awsvpc
      RequiresCompatibilities: [FARGATE]
      Cpu: !Ref ECSTaskCpu
      Memory: !Ref ECSTaskMemory
      ExecutionRoleArn: !Ref ECSTaskExecutionRole
      ContainerDefinitions:
        - Name: zabbix-web
          Image: !Ref ZabbixWebImage
          Essential: true
          PortMappings:
            - { ContainerPort: 80, Protocol: tcp }
          Environment:
            - { Name: DB_SERVER_HOST, Value: !GetAtt ZabbixDatabase.Endpoint.Address }
            - { Name: POSTGRES_DB, Value: zabbix }
          Secrets:
            - Name: POSTGRES_USER
              ValueFrom: !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${DBSecret}:username::'
            - Name: POSTGRES_PASSWORD
              ValueFrom: !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${DBSecret}:password::'
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref ZabbixWebLogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs
          HealthCheck:
            Command: [ "CMD-SHELL", "curl -f http://localhost/ || exit 1" ]
            Interval: 30
            Timeout: 5
            Retries: 3
            StartPeriod: 60

  ZabbixServerService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Sub '${ProjectName}-${Environment}-server'
      Cluster: !Ref ECSCluster
      LaunchType: FARGATE
      DesiredCount: 1
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets: !Ref Subnets
          SecurityGroups:
            - !Ref ECSServiceSecurityGroup
      TaskDefinition: !Ref ZabbixServerTaskDefinition

  ZabbixWebService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Sub '${ProjectName}-${Environment}-web'
      Cluster: !Ref ECSCluster
      LaunchType: FARGATE
      DesiredCount: 1
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets: !Ref Subnets
          SecurityGroups:
            - !Ref ECSServiceSecurityGroup
      TaskDefinition: !Ref ZabbixWebTaskDefinition

Outputs:
  ECSClusterName:
    Description: Name of the ECS Cluster
    Value: !Ref ECSCluster
  ZabbixServerServiceName:
    Description: ECS Service name for Zabbix Server
    Value: !Ref ZabbixServerService
  ZabbixWebServiceName:
    Description: ECS Service name for Zabbix Web
    Value: !Ref ZabbixWebService
  DatabaseEndpoint:
    Description: RDS Database Endpoint
    Value: !GetAtt ZabbixDatabase.Endpoint.Address
